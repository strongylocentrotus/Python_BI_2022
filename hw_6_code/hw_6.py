# -*- coding: utf-8 -*-
"""hw_6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rzbrYXzkg4de7g8xkPVaMtrmdM3ntF9r
"""

import re
import matplotlib.pyplot as plt

path = '/content/references.txt'

with open(f'{path}') as references:
    references = references.read()
    ftp_sep = re.sub(r';', ' ', references)
    ftps = re.findall(r'ftp[\w./]+', ftp_sep)

with open(r'/content/ftps.txt', 'w') as ftps_sheet:
    ftps_sheet.write('\n'.join(str(ftp) for ftp in ftps))

def number_getter(file):
    return re.findall('[0-9]+.[0-9]+', file)

def a_getter(file):
    return re.findall(r'\w*a+\w*', file, flags=re.IGNORECASE)
  
def excl_getter(file):
    return re.findall(r'[\w,\s]+!', file)

def uniq_getter(file):
    all_words = re.findall(r'[a-zA-z\'\-]+', novel)
    return list(set(map(lambda x: x.lower(), all_words)))

path_2 = '2430AD.txt'
with open(f'{path_2}') as novel:
    novel = novel.read()
    novel_num = number_getter(novel)
    novel_a_words = a_getter(novel)
    exclam_sent = excl_getter(novel)
    unique_words = uniq_getter(novel)

unique_words

length = list(map(lambda word: len(word), unique_words))

len_number = dict((i, length.count(i)) for i in length)

lengths = list(len_number.keys())

word_number = list(len_number.values())





portion = []
for value in word_number:
    portion.append(value/sum(len_number.values()))
plt.style.use('seaborn-paper')
plt.bar(list(map(str, sorted(lengths))), portion, color='cyan')
plt.xlabel('length', fontsize=12)
plt.ylabel('number', fontsize=12)

def translate(transwords: str) -> str:
    vowels = 'ауоыэяюёие'
    transwords = re.sub(fr'([{vowels}])', fr'\1к\1', transwords)
    return transwords